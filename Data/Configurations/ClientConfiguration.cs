// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using SpringBootCloneApp.Data;
using SpringBootCloneApp.Models;
using System;
using System.Collections.Generic;
using System.Reflection.Emit;

#nullable disable

namespace SpringBootCloneApp.Data.Configurations
{
    public partial class ClientConfiguration : IEntityTypeConfiguration<Client>
    {
        public void Configure(EntityTypeBuilder<Client> entity)
        {
            entity.HasKey(e => e.Id).HasName("PK__client__BF21A42471C2D2BA");

            entity.ToTable("client");

            entity.HasIndex(e => e.Email, "UK_bfgjs3fem0hmjhvih80158x29").IsUnique();

            entity.Property(e => e.Id).HasColumnName("client_id");

            entity.Property(e => e.Address)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("address");

            entity.Property(e => e.Banned).HasColumnName("banned");

            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("email")
                .IsRequired();

            entity.Property(e => e.FirstName)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("first_name");

            entity.Property(e => e.LastName)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("last_name");

            entity.HasIndex(x => x.UserName).IsUnique(true);

            entity.Property(p => p.UserName)
                .HasColumnName("user_name")
                .HasMaxLength(60)
                .IsUnicode(false)            
                .IsRequired()
                .HasComputedColumnSql("\"email\"", true);

            entity.Property(e => e.PasswordHash)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PasswordHash")
                .IsRequired();


            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Client> entity);
    }
}
